"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const path_1 = require("path");
const utils_1 = require("../../utils");
function default_1(tree, options) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const normalizedOptions = (0, utils_1.normalizeOptions)(tree, (0, devkit_1.getWorkspaceLayout)(tree).appsDir, options);
        const sourceRoot = normalizedOptions.projectRoot;
        const targetOptions = {
            outputPath: (0, utils_1.toPosixPath)((0, path_1.join)((0, path_1.normalize)('dist'), sourceRoot)),
            main: (0, utils_1.toPosixPath)((0, path_1.join)(sourceRoot, 'main.go')),
        };
        (0, devkit_1.addProjectConfiguration)(tree, normalizedOptions.projectName, {
            root: sourceRoot,
            projectType: 'application',
            sourceRoot,
            targets: {
                build: {
                    executor: '@nx-go/nx-go:build',
                    options: targetOptions,
                },
                serve: {
                    executor: '@nx-go/nx-go:serve',
                    options: {
                        main: (0, utils_1.toPosixPath)((0, path_1.join)(sourceRoot, 'main.go')),
                    },
                },
                test: {
                    executor: '@nx-go/nx-go:test',
                },
                lint: {
                    executor: '@nx-go/nx-go:lint',
                },
            },
            tags: normalizedOptions.parsedTags,
        });
        (0, utils_1.addFiles)(tree, (0, path_1.join)(__dirname, 'files'), normalizedOptions);
        (0, utils_1.createGoMod)(tree, normalizedOptions);
        (0, utils_1.updateGoWork)(tree, normalizedOptions);
        yield (0, devkit_1.formatFiles)(tree);
    });
}
exports.default = default_1;
//# sourceMappingURL=generator.js.map